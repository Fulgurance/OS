format pe64 efi
entry Main

section '.text' code readable executable
include "UEFI/UEFI.fasm"

Main:
mov [UEFIHandle],rcx
mov [UEFISystemTable],rdx
push rbp

UEFI ConOut,SimpleTextOutputProtocol,ClearScreen,1, \
        UEFI_ARGUMENT_TYPE_INSTANCE_POINTER

UEFIGetStatusCode
        
UEFI BootServices,BootServices,GetMemoryMap,5, \
        UEFI_ARGUMENT_TYPE_ADDRESS,[MemoryMapSize]

UEFIGetStatusCode
        
mov rax,[MemoryMapSize]
add qword [MemoryMapSize],rax

UEFI BootServices,BootServices,AllocatePool,3, \
        UEFI_ARGUMENT_TYPE_VALUE,MemoryType.LoaderData, \
        UEFI_ARGUMENT_TYPE_VALUE,[MemoryMapSize], \
        UEFI_ARGUMENT_TYPE_ADDRESS,[MemoryMapAddress]

UEFIGetStatusCode

UEFI BootServices,BootServices,GetMemoryMap,5, \
        UEFI_ARGUMENT_TYPE_ADDRESS,[MemoryMapSize], \
        UEFI_ARGUMENT_TYPE_VALUE,[MemoryMapAddress], \
        UEFI_ARGUMENT_TYPE_ADDRESS,[MapKey], \
        UEFI_ARGUMENT_TYPE_ADDRESS,[DescriptorSize], \
        UEFI_ARGUMENT_TYPE_ADDRESS,[DescriptorVersion]

UEFIGetStatusCode

jmp $

section '.data' data readable writable
include "System/SystemMessage.fasm"
UEFIHandle:                 dq ?
UEFISystemTable:            dq ?
MemoryMapSize:              dq ?
MemoryMapAddress:           dq ?
MapKey:                     dq ?
DescriptorSize:             dq ?
DescriptorVersion:          dd ?
PageDirectoryAddress:       dq ?
