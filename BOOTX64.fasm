format pe64 efi
entry Main

section '.text' code readable executable

Main:
mov [UEFIHandle],rcx
mov [UEFISystemTable],rdx
push rbp

;--------------------------------------------
mov rdx,[UEFISystemTable]

push rbp
sub rsp,0x20

mov rcx,[rdx+SystemTable.ConOut]
mov rax,[rcx+SimpleTextOutputProtocol.ClearScreen]
call rax

add rsp,0x20
;--------------------------------------------
mov rdx,[UEFISystemTable]

push rbp
sub rsp,5*8

mov rcx,[rdx+SystemTable.BootServices]
mov rax,[rcx+BootServices.GetMemoryMap]
lea rcx,[MemoryMapSize]
lea rdx,[MemoryMap]
lea r8,[MapKey]
lea r9,[DescriptorSize]

lea r10,[DescriptorVersion]
mov qword[rsp + 8*4],r10

call rax

add rsp,5*8
;--------------------------------------------
;cmp rax,EFI_BUFFER_TOO_SMALL
mov rcx,EFI_BUFFER_TOO_SMALL
cmp rax,rcx
;cmp [ERROR],rax
jne Fail
;--------------------------------------------
Success:
mov rdx,[UEFISystemTable]

push rbp
sub rsp,0x20

mov rcx,[rdx+SystemTable.ConOut]
mov rax,[rcx+SimpleTextOutputProtocol.OutputString]
mov rdx,TestText
call rax

add rsp,0x20
;--------------------------------------------
Fail:

jmp $

section '.data' data readable writable
include "UEFI/StatusCodes.fasm"
include "UEFI/GUID.fasm"
include "UEFI/Interface.fasm"
include "UEFI/DataTypes.fasm"
include "UEFI/TableHeader.fasm"
include "UEFI/AllocateType.fasm"
include "UEFI/BootServices.fasm"
include "UEFI/GetMemoryMapStatusCodes.fasm"
include "UEFI/GraphicsOutputBltOperation.fasm"
include "UEFI/GraphicsOutputProtocol.fasm"
include "UEFI/LocateSearchType.fasm"
include "UEFI/MemoryDescriptor.fasm"
include "UEFI/MemoryType.fasm"
include "UEFI/SimpleTextOutputProtocol.fasm"
include "UEFI/SystemTable.fasm"

UEFIHandle:         dq ?
UEFISystemTable:    dq ?

SystemText:         du '* ',0
Text:               du 'Starting GetMemoryMap test',0
TestText:           du 'Test OK',0

MemoryMapSize:      dq ?
MemoryMap:          dq ?
MapKey:             dq ?
DescriptorSize:     dq ?
DescriptorVersion:  dd ?

ERROR:              dq EFI_BUFFER_TOO_SMALL
