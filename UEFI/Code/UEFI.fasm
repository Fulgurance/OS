macro UEFI Entry*,Interface*,Function*,ParametersNumber*,Type1*,Argument1,Type2,Argument2,Type3,Argument3,Type4,Argument4,Type5,Argument5,Type6,Argument6,Type7,Argument7,Type8,Argument8,Type9,Argument9,Type10,Argument10
{
    ArgumentsNumber = 10
    if Argument10 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument9 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument8 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument7 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument6 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument5 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument4 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument3 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument2 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    if Argument1 eq
        ArgumentsNumber = ArgumentsNumber-1
    end if
    
    if ParametersNumber > 4
        sub rsp,ParametersNumber*8
    else
        sub rsp,0x20
    end if

    mov rdx,[UEFISystemTable]
    mov rcx,[rdx+SystemTable.#Entry]
    mov rax,[rcx+#Interface#.#Function]
    
    if ArgumentsNumber > 0
        if Argument1 eq
            if Type1 != UEFI_ARGUMENT_TYPE_INSTANCE_POINTER
                xor rcx,rcx
            end if
        else 
            if Type1 eq UEFI_ARGUMENT_TYPE_INSTANCE_POINTER
        
            else 
                if Type1 eq UEFI_ARGUMENT_TYPE_ADDRESS
                    lea rcx,Argument1
                else
                    mov rcx,Argument1
                end if
            end if
        end if
    end if
    
    if ArgumentsNumber > 1
        if Argument2 eq 0
            xor rdx,rdx
        else 
            if Type2 eq UEFI_ARGUMENT_TYPE_ADDRESS
                lea rdx,Argument2
            else
                mov rdx,Argument2
            end if
        end if
    end if
    
    if ArgumentsNumber > 2
        if Argument3 eq 0
            xor r8,r8
        else 
            if Type3 eq UEFI_ARGUMENT_TYPE_ADDRESS
                lea r8,Argument3
            else
                mov r8,Argument3
            end if
        end if
    end if
    
    if ArgumentsNumber > 3
        if Argument4 eq 0
            xor r9,r9
        else 
            if Type4 eq UEFI_ARGUMENT_TYPE_ADDRESS
                lea r9,Argument4
            else
                mov r9,Argument4
            end if
        end if
    end if
    
    if ArgumentsNumber > 4
        if Type5 eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument5
            mov qword[rsp + 8*4],r10
        else
            mov qword[rsp + 8*4],r10
        end if
    end if
    
    if ArgumentsNumber > 5
        if Type eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument6
            mov qword[rsp + 8*5],r10
        else
            mov qword[rsp + 8*5],r10
        end if
    end if
    
    if ArgumentsNumber > 6
        if Type7 eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument7
            mov qword[rsp + 8*6],r10
        else
            mov qword[rsp + 8*6],r10
        end if
    end if
    
    if ArgumentsNumber > 7
        if Type8 eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument8
            mov qword[rsp + 8*7],r10
        else
            mov qword[rsp + 8*7],r10
        end if
    end if
    
    if ArgumentsNumber > 8
        if Type9 eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument9
            mov qword[rsp + 8*8],r10
        else
            mov qword[rsp + 8*8],r10
        end if
    end if
    
    if ArgumentsNumber > 9
        if Type10 eq UEFI_ARGUMENT_TYPE_ADDRESS
            lea r10,Argument10
            mov qword[rsp + 8*9],r10
        else
            mov qword[rsp + 8*9],r10
        end if
    end if
    
    call rax

    if ParametersNumber > 4
        add rsp,ParametersNumber*8
    else
        add rsp,0x20
    end if
} 
